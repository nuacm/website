<h1>Welcome to the playground</h1>

<p><q>What is this place?</q></p>

<p>
  This, dear friend is where my HTML/CSS and JS all come to grow up. Think
  of it like a school, where experimenting and creativity is encouraged.
  As a wise man once said:
</p>

<blockquote cite="Doug McIlroy">
  <p>
    Write programs that do one thing and do it well. Write programs to work
    together. Write programs to handle text streams, because that is a universal
    interface.
  </p>
  <p><cite>Doug McIlroy</cite></p>
</blockquote>
<p>
  This applies to web design just as much as it applies to programs.
  Modularization of code allows projects to be maintained, and ensures
  consistency. In a program the consistency shows itself in a clean API, and
  more dynamic use cases. Similarly with web elements, modular design creates
  a consistent look and feel across the site, and makes using elements simple.
</p>

<p>
  This page is the first line of defense against style breakage. If this page
  looks off, or has bugs, that indicates problems elsewhere. This page should
  ideally cover almost every style case for the site. With the exception of
  cross element interactions.
</p>

<h2>Index</h2>

<ol>
  <strong>Base HTML</strong>
  <li><a href="#text">Text</a></li>
  <li><a href="#lists">Lists</a></li>
  <li><a href="#links">Links</a></li>
  <li><a href="#images">Images</a></li>
  <li><a href="#tables">Tables</a></li>
  <li><a href="#forms">Forms</a></li>
  <li><a href="#extras">Extras</a></li>
  <strong>ACM Elements</strong>
  <li><a href="#logo">Logo</a></li>
</ol>

<%= render 'pages/playground/text' %>
<%= render 'pages/playground/lists' %>
<%= render 'pages/playground/links' %>
<%= render 'pages/playground/images' %>
<%= render 'pages/playground/tables' %>
<%= render 'pages/playground/forms' %>
<%= render 'pages/playground/extras' %>
<%= render 'pages/playground/logo' %>
